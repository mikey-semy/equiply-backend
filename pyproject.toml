[project]
name = "aedb"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "aio-pika>=9.5.4",
    "aioboto3<=13.1.0",
    "aiohttp>=3.11.11",
    "aiosqlite>=0.20.0",
    "alembic>=1.14.0",
    "apscheduler>=3.11.0",
    "argon2-cffi>=23.1.0",
    "asyncpg>=0.30.0",
    "bcrypt>=4.2.1",
    "dishka>=1.4.2",
    "fastapi[all]>=0.115.6",
    "passlib>=1.7.4",
    "pre-commit>=4.1.0",
    "pydantic>=2.10.4",
    "pydantic-settings>=2.7.1",
    "pytest-asyncio>=0.25.3",
    "python-jose>=3.3.0",
    "pytz>=2024.2",
    "redis>=5.2.1",
    "sqlalchemy>=2.0.36",
    "tenacity>=9.0.0",
    "types-pytz>=2025.1.0.20250204",
    "uvicorn>=0.34.0",
]

[project.optional-dependencies]
dev = [
    "black",
    "flake8",
    "isort",
    "mypy",
    "pytest",
    "pytest-asyncio",
]

[project.scripts]
echo = "scripts.commands:echo"
dev = "scripts.commands:dev"
prod = "scripts.commands:prod"
migrate = "scripts.commands:migrate"
create_migration = "scripts.commands:create_migration"
rollback = "scripts.commands:rollback"
lint = "scripts.commands:lint"
format = "scripts.commands:format"
check = "scripts.commands:check"
test = "scripts.commands:test"
serve = "scripts.commands:serve"
start = "scripts.commands:start_all"
infra-up = "scripts.commands:infra_up"
infra-down = "scripts.commands:infra_down"
infra-build = "scripts.commands:infra_build"
infra-logs = "scripts.commands:infra_logs"
infra-restart = "scripts.commands:infra_restart"
grafana-restart = "scripts.commands:grafana_restart"
grafana-logs = "scripts.commands:grafana_logs"
grafana-rebuild = "scripts.commands:grafana_rebuild"

[tool.setuptools]
packages = ["app", "scripts"]

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::pydantic.PydanticDeprecatedSince20"
]
markers = [
    "integration: marks tests as integration tests"
]

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]

[[tool.mypy.overrides]]
module = "app.core.migrations.*"
ignore_errors = true

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"
