from typing import Optional

from dishka.integrations.fastapi import FromDishka, inject
from fastapi.responses import RedirectResponse

from app.routes.base import BaseRouter
from app.schemas import OAuthProvider, OAuthResponseSchema
from app.services.v1.oauth.service import OAuthService


class OAuthRouter(BaseRouter):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤ OAuth2 –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
    """

    def __init__(self):
        super().__init__(prefix="oauth", tags=["OAuthentication"])

    def configure(self):
        @self.router.get(
            path="/{provider}",
            response_class=RedirectResponse,
        )
        @inject
        async def get_oauth_url(
            oauth_service: FromDishka[OAuthService],
            provider: OAuthProvider,
        ) -> RedirectResponse:
            """
            üåê **–†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞.**

            **Args**:
            - **provider**: –ò–º—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ (vk/google/yandex)

            **Returns**:
            - **RedirectResponse**: –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            """
            return await oauth_service.get_oauth_url(provider)

        @self.router.get(
            path="/{provider}/callback",
            response_model=OAuthResponseSchema,
        )
        @inject
        async def oauth_callback(
            oauth_service: FromDishka[OAuthService],
            provider: OAuthProvider,
            code: str,
            state: Optional[str] = None,
            device_id: Optional[str] = None,
        ) -> OAuthResponseSchema:
            """
            üîÑ **–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç OAuth –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞.**

            **Args**:
            - **provider**: –ò–º—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
            - **code**: –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞

            **Returns**:
            - **OAuthResponse**: –¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞
            """
            return await oauth_service.authenticate(provider, code, state, device_id)
