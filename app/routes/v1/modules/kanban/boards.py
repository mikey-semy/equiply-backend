"""–ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞–º–∏."""

from typing import Optional

from dishka.integrations.fastapi import FromDishka, inject
from fastapi import Depends, Path, Query

from app.core.security.auth import get_current_user
from app.routes.base import BaseRouter
from app.schemas.v1.auth.exceptions import TokenMissingResponseSchema
from app.schemas.v1.modules.kanban.exceptions import (
    KanbanAccessDeniedResponseSchema, KanbanBoardNotFoundResponseSchema)
from app.schemas.v1.modules.kanban.requests import (
    CreateKanbanBoardSchema, UpdateKanbanBoardSchema,
    UpdateKanbanBoardSettingsSchema)
from app.schemas.v1.modules.kanban.responses import (
    KanbanBoardCreateResponseSchema, KanbanBoardDeleteResponseSchema,
    KanbanBoardDetailResponseSchema, KanbanBoardListResponseSchema,
    KanbanBoardResponseSchema, KanbanBoardSettingsResponseSchema,
    KanbanBoardSettingsUpdateResponseSchema, KanbanBoardUpdateResponseSchema,
    KanbanDefaultSettingsResponseSchema)
from app.schemas.v1.pagination import Page, PaginationParams
from app.schemas.v1.users import CurrentUserSchema
from app.schemas.v1.workspaces import (WorkspaceAccessDeniedResponseSchema,
                                       WorkspaceNotFoundResponseSchema)
from app.services.v1.modules.kanban.service import KanbanService


class KanbanBoardRouter(BaseRouter):
    """–ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞–º–∏."""

    def __init__(self):
        super().__init__(prefix="workspaces/{workspace_id}/kanban", tags=["Kanban"])

    def configure(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–æ–∫."""

        @self.router.post(
            path="/boards",
            response_model=KanbanBoardCreateResponseSchema,
            responses={
                401: {
                    "model": TokenMissingResponseSchema,
                    "description": "–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
                },
                403: {
                    "model": WorkspaceAccessDeniedResponseSchema,
                    "description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏",
                },
                404: {
                    "model": WorkspaceNotFoundResponseSchema,
                    "description": "–†–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
                },
            },
        )
        @inject
        async def create_kanban_board(
            workspace_id: int,
            board_data: CreateKanbanBoardSchema,
            kanban_service: FromDishka[KanbanService],
            current_user: CurrentUserSchema = Depends(get_current_user),
        ) -> KanbanBoardCreateResponseSchema:
            """
            ## ‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

            –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫—É –≤ —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.

            ### Args:
            * **workspace_id**: ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞

            ### –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:
            * **name**: –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏
            * **description**: –û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            * **display_settings**: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            * **template_id**: ID —à–∞–±–ª–æ–Ω–∞ –º–æ–¥—É–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

            ### Returns:
            * **data**: –î–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏
            * **message**: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

            ### –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–æ—Å–∫–æ–π —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å:
            - –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å (PUT /boards/{board_id}/name)
            - –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å (PUT /boards/{board_id}/workspace)
            - –î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å (POST /boards/{board_id}/duplicate)
            - –î–æ—Å—Ç—É–ø –ø–æ —Å—Å—ã–ª–∫–µ (GET /boards/{board_id}/link)
            - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å–∫–∏ (GET /boards/{board_id}/settings)
            - –£–¥–∞–ª–∏—Ç—å (DELETE /boards/{board_id}) - —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ delete_kanban_board()
            """
            return await kanban_service.create_board(
                workspace_id=workspace_id,
                board_data=board_data,
                current_user=current_user,
            )

        @self.router.get(
            path="/boards",
            response_model=KanbanBoardListResponseSchema,
            responses={
                401: {
                    "model": TokenMissingResponseSchema,
                    "description": "–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
                },
                403: {
                    "model": WorkspaceAccessDeniedResponseSchema,
                    "description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏",
                },
                404: {
                    "model": WorkspaceNotFoundResponseSchema,
                    "description": "–†–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
                },
            },
        )
        @inject
        async def get_kanban_boards(
            workspace_id: int,
            kanban_service: FromDishka[KanbanService],
            skip: int = Query(0, ge=0, description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤"),
            limit: int = Query(
                10, ge=1, le=100, description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"
            ),
            sort_by: str = Query("updated_at", description="–ü–æ–ª–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏"),
            sort_desc: bool = Query(True, description="–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é"),
            search: Optional[str] = Query(
                None, description="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏"
            ),
            current_user: CurrentUserSchema = Depends(get_current_user),
        ) -> KanbanBoardListResponseSchema:
            """
            ## üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–æ–∫

            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–æ–∫ –≤ —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –∏ –ø–æ–∏—Å–∫–æ–º.

            ### Args:
            * **workspace_id**: ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
            * **skip**: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            * **limit**: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (–æ—Ç 1 –¥–æ 100)
            * **sort_by**: –ü–æ–ª–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
            * **sort_desc**: –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
            * **search**: –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

            ### Returns:
            * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞–º–∏
            """
            pagination = PaginationParams(
                skip=skip,
                limit=limit,
                sort_by=sort_by,
                sort_desc=sort_desc,
                entity_name="KanbanBoard",
            )

            boards, total = await kanban_service.get_boards(
                workspace_id=workspace_id,
                current_user=current_user,
                pagination=pagination,
                search=search,
            )

            page = Page(
                items=boards,
                total=total,
                page=pagination.page,
                size=pagination.limit,
            )
            return KanbanBoardListResponseSchema(data=page)

        @self.router.get(
            path="/boards/{board_id}",
            response_model=KanbanBoardResponseSchema,
            responses={
                401: {
                    "model": TokenMissingResponseSchema,
                    "description": "–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
                },
                403: {
                    "model": KanbanAccessDeniedResponseSchema,
                    "description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏",
                },
                404: {
                    "model": KanbanBoardNotFoundResponseSchema,
                    "description": "–ö–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                },
            },
        )
        @inject
        async def get_kanban_board(
            workspace_id: int,
            board_id: int = Path(..., description="ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏"),
            kanban_service: FromDishka[KanbanService] = None,
            current_user: CurrentUserSchema = Depends(get_current_user),
        ) -> KanbanBoardResponseSchema:
            """
            ## üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–µ –ø–æ –µ—ë ID.

            ### Args:
            * **workspace_id**: ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
            * **board_id**: ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

            ### Returns:
            * **data**: –î–∞–Ω–Ω—ã–µ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏
            * **message**: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            """
            return await kanban_service.get_board(
                board_id=board_id,
                current_user=current_user,
            )

        @self.router.get(
            path="/boards/{board_id}/details",
            response_model=KanbanBoardDetailResponseSchema,
            responses={
                401: {
                    "model": TokenMissingResponseSchema,
                    "description": "–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
                },
                403: {
                    "model": KanbanAccessDeniedResponseSchema,
                    "description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏",
                },
                404: {
                    "model": KanbanBoardNotFoundResponseSchema,
                    "description": "–ö–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                },
            },
        )
        @inject
        async def get_kanban_board_details(
            workspace_id: int,
            board_id: int = Path(..., description="ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏"),
            kanban_service: FromDishka[KanbanService] = None,
            current_user: CurrentUserSchema = Depends(get_current_user),
        ) -> KanbanBoardDetailResponseSchema:
            """
            ## üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–µ

            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–µ, –≤–∫–ª—é—á–∞—è –∫–æ–ª–æ–Ω–∫–∏ –∏ –∫–∞—Ä—Ç–æ—á–∫–∏.

            ### Args:
            * **workspace_id**: ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
            * **board_id**: ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

            ### Returns:
            * **data**: –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏, –≤–∫–ª—é—á–∞—è –∫–æ–ª–æ–Ω–∫–∏ –∏ –∫–∞—Ä—Ç–æ—á–∫–∏
            * **message**: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            """
            return await kanban_service.get_board_details(
                board_id=board_id,
                current_user=current_user,
            )

        @self.router.put(
            path="/boards/{board_id}",
            response_model=KanbanBoardUpdateResponseSchema,
            responses={
                401: {
                    "model": TokenMissingResponseSchema,
                    "description": "–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
                },
                403: {
                    "model": KanbanAccessDeniedResponseSchema,
                    "description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏",
                },
                404: {
                    "model": KanbanBoardNotFoundResponseSchema,
                    "description": "–ö–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                },
            },
        )
        @inject
        async def update_kanban_board(
            workspace_id: int,
            board_id: int,
            board_data: UpdateKanbanBoardSchema,
            kanban_service: FromDishka[KanbanService],
            current_user: CurrentUserSchema = Depends(get_current_user),
        ) -> KanbanBoardUpdateResponseSchema:
            """
            ## ‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

            –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–µ.

            ### Args:
            * **workspace_id**: ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
            * **board_id**: ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

            ### –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:
            * **name**: –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            * **description**: –ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            * **display_settings**: –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

            ### Returns:
            * **data**: –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏
            * **message**: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            """
            return await kanban_service.update_board(
                board_id=board_id,
                board_data=board_data,
                current_user=current_user,
            )

        @self.router.delete(
            path="/boards/{board_id}",
            response_model=KanbanBoardDeleteResponseSchema,
            responses={
                401: {
                    "model": TokenMissingResponseSchema,
                    "description": "–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
                },
                403: {
                    "model": KanbanAccessDeniedResponseSchema,
                    "description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏",
                },
                404: {
                    "model": KanbanBoardNotFoundResponseSchema,
                    "description": "–ö–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                },
            },
        )
        @inject
        async def delete_kanban_board(
            workspace_id: int,
            board_id: int = Path(..., description="ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏"),
            kanban_service: FromDishka[KanbanService] = None,
            current_user: CurrentUserSchema = Depends(get_current_user),
        ) -> KanbanBoardDeleteResponseSchema:
            """
            ## üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

            –£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫—É –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–µ–π –¥–∞–Ω–Ω—ã–µ.

            ### Args:
            * **workspace_id**: ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
            * **board_id**: ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

            ### Returns:
            * **message**: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            """
            return await kanban_service.delete_board(
                board_id=board_id,
                current_user=current_user,
            )

        # @self.router.get(
        #     path="/boards/{board_id}/settings",
        #     response_model=KanbanBoardSettingsResponseSchema,
        #     responses={
        #         401: {"model": TokenMissingResponseSchema, "description": "–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"},
        #         403: {"model": KanbanAccessDeniedResponseSchema, "description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"},
        #         404: {"model": KanbanBoardNotFoundResponseSchema, "description": "–ö–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"},
        #     },
        # )
        # @inject
        # async def get_kanban_board_settings(
        #     workspace_id: int,
        #     board_id: int = Path(..., description="ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏"),
        #     kanban_service: FromDishka[KanbanService] = None,
        #     current_user: CurrentUserSchema = Depends(get_current_user),
        # ) -> KanbanBoardSettingsResponseSchema:
        #     """
        #     ## ‚öôÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

        #     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –¥—Ä—É–≥–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏.

        #     ### Args:
        #         * **workspace_id**: ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
        #         * **board_id**: ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

        #     ### Returns:
        #         * **data**: –û–±—ä–µ–∫—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏
        #         * **message**: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        #     """
        #     return await kanban_service.get_board_settings(
        #         board_id=board_id,
        #         current_user=current_user,
        #     )

        # @self.router.put(
        #     path="/boards/{board_id}/settings",
        #     response_model=KanbanBoardSettingsUpdateResponseSchema,
        #     responses={
        #         401: {"model": TokenMissingResponseSchema, "description": "–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"},
        #         403: {"model": KanbanAccessDeniedResponseSchema, "description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"},
        #         404: {"model": KanbanBoardNotFoundResponseSchema, "description": "–ö–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"},
        #     },
        # )
        # @inject
        # async def update_kanban_board_settings(
        #     workspace_id: int,
        #     board_id: int = Path(..., description="ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏"),
        #     settings_data: UpdateKanbanBoardSettingsSchema = Body(..., description="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏"),
        #     kanban_service: FromDishka[KanbanService] = None,
        #     current_user: CurrentUserSchema = Depends(get_current_user),
        # ) -> KanbanBoardSettingsUpdateResponseSchema:
        #     """
        #     ## üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

        #     –û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –¥—Ä—É–≥–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏.

        #     ### Args:
        #         * **workspace_id**: ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
        #         * **board_id**: ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏
        #         * **settings_data**: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

        #     ### –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:
        #         * **display_settings**: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å–∫–∏
        #         * **automation_settings**: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        #         * **notification_settings**: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        #         * **access_settings**: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

        #     ### Returns:
        #         * **data**: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏
        #         * **message**: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        #     """
        #     return await kanban_service.update_board_settings(
        #         board_id=board_id,
        #         settings_data=settings_data,
        #         current_user=current_user,
        #     )

        # @self.router.get(
        #     path="/settings/defaults",
        #     response_model=KanbanDefaultSettingsResponseSchema,
        #     responses={
        #         401: {"model": TokenMissingResponseSchema, "description": "–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"},
        #         403: {"model": WorkspaceAccessDeniedResponseSchema, "description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"},
        #     },
        # )
        # @inject
        # async def get_default_kanban_settings(
        #     workspace_id: int,
        #     kanban_service: FromDishka[KanbanService] = None,
        #     current_user: CurrentUserSchema = Depends(get_current_user),
        # ) -> KanbanDefaultSettingsResponseSchema:
        #     """
        #     ## üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        #     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–æ–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ —Å–∏—Å—Ç–µ–º–µ.

        #     ### Args:
        #         * **workspace_id**: ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞

        #     ### Returns:
        #         * **data**: –û–±—ä–µ–∫—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        #         * **message**: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        #     """
        #     return await kanban_service.get_default_settings(
        #         workspace_id=workspace_id,
        #         current_user=current_user,
        #     )

        # @self.router.post(
        #     path="/boards/{board_id}/settings/reset",
        #     response_model=KanbanBoardSettingsUpdateResponseSchema,
        #     responses={
        #         401: {"model": TokenMissingResponseSchema, "description": "–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"},
        #         403: {"model": KanbanAccessDeniedResponseSchema, "description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"},
        #         404: {"model": KanbanBoardNotFoundResponseSchema, "description": "–ö–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"},
        #     },
        # )
        # @inject
        # async def reset_kanban_board_settings(
        #     workspace_id: int,
        #     board_id: int = Path(..., description="ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏"),
        #     kanban_service: FromDishka[KanbanService] = None,
        #     current_user: CurrentUserSchema = Depends(get_current_user),
        # ) -> KanbanBoardSettingsUpdateResponseSchema:
        #     """
        #     ## üîÑ –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

        #     –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.

        #     ### Args:
        #     * **workspace_id**: ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
        #     * **board_id**: ID –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏

        #     ### Returns:
        #     * **data**: –°–±—Ä–æ—à–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏
        #     * **message**: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        #     """
        #     return await kanban_service.reset_board_settings(
        #         board_id=board_id,
        #         current_user=current_user,
        #     )
