from fastapi import Depends, File, UploadFile
from dishka.integrations.fastapi import FromDishka, inject
from app.core.security.auth import get_current_user
from app.routes.base import BaseRouter
from app.schemas import CurrentUserSchema, PasswordFormSchema, ProfileSchema, ProfileResponseSchema, PasswordUpdateResponseSchema
from app.services.v1.profile.service import ProfileService

class ProfileRouter(BaseRouter):
    def __init__(self):
        super().__init__(prefix="profile", tags=["Profile"])

    def configure(self):
        @self.router.get("", response_model=ProfileResponseSchema)
        @inject
        async def get_profile(
            profile_service: FromDishka[ProfileService],
            current_user: CurrentUserSchema = Depends(get_current_user)
        ) -> ProfileResponseSchema:
            """
            ## –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            
            ### Returns:
            * **ProfileResponseSchema**: –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            """
            return await profile_service.get_profile(current_user)
        
        @self.router.put("", response_model=ProfileResponseSchema)
        @inject
        async def update_profile(
            profile_data: ProfileSchema,
            profile_service: FromDishka[ProfileService],
            current_user: CurrentUserSchema = Depends(get_current_user)
        ) -> ProfileResponseSchema:
            """
            ## –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            
            ### Returns:
            * **ProfileResponseSchema**: –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            """
            return await profile_service.update_profile(current_user, profile_data)
        
        @self.router.put("/password", response_model=PasswordUpdateResponseSchema)
        @inject
        async def update_password(
            profile_service: FromDishka[ProfileService],
            password_data: PasswordFormSchema,
            current_user: CurrentUserSchema = Depends(get_current_user)
        ) -> PasswordUpdateResponseSchema:
            """
            ## üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
            –¢—Ä–µ–±—É–µ—Ç —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, 
            —á—Ç–æ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç.
            """
            return await profile_service.update_password(current_user, password_data)
        
        @self.router.get("/avatar", response_model=AvatarSchema)
        @inject
        async def get_avatar(
            profile_service: FromDishka[ProfileService],
            current_user: CurrentUserSchema = Depends(get_current_user),
        ) -> AvatarSchema:
            """
            –ü–æ–ª—É—á–∞–µ—Ç URL –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

            Args:
                user: –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                session: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.

            Returns:
                AvatarSchema: URL –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            """
            return await profile_service.get_avatar(current_user)

        @self.router.post("/avatar", response_model=ProfileSchema)
        async def upload_avatar(
            profile_service: FromDishka[ProfileService],
            file: UploadFile = File(
                ...,
                description="–§–∞–π–ª –∞–≤–∞—Ç–∞—Ä–∞",
                content_type=["image/jpeg", "image/png"],
                max_size=2_000_000,  # 2MB
            ),
            current_user: CurrentUserSchema = Depends(get_current_user),
        ) -> ProfileSchema:
            """
            –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

            Args:
                user: –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            Returns:
                ProfileSchema: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∞–≤–∞—Ç–∞—Ä–æ–º.
            """
            return await profile_service.update_avatar(current_user, file)