"""add kanban, change templates and relationships

Revision ID: 4db7488f97e7
Revises: 7d69ea1182f3
Create Date: 2025-03-26 21:56:23.707743

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4db7488f97e7'
down_revision: Union[str, None] = '7d69ea1182f3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Создаем тип enum перед его использованием с правильными значениями в нижнем регистре
    op.execute("CREATE TYPE moduletype AS ENUM ('table', 'list', 'kanban', 'blog')")

    op.create_table('tags',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('kanban_boards',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('display_settings', sa.JSON(), nullable=False),
    sa.Column('workspace_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['template_id'], ['module_templates.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('module_integrations',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('integration_type', sa.Enum('KANBAN_TO_BLOG', 'TABLE_TO_BLOG', 'LIST_TO_BLOG', 'KANBAN_TO_LIST', 'TABLE_TO_KANBAN', name='integrationtype'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=False),
    sa.Column('workspace_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('posts',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('workspace_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'ARCHIVED', name='poststatus'), nullable=False),
    sa.Column('views', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['module_templates.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('kanban_columns',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('wip_limit', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['kanban_boards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_content_blocks',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('TEXT', 'IMAGE', 'VIDEO', 'AUDIO', 'CODE', name='contenttype'), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('caption', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_tags',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id', 'tag_id', 'id'),
    sa.UniqueConstraint('post_id', 'tag_id', name='uq_post_tag')
    )
    op.create_table('kanban_cards',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('column_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['column_id'], ['kanban_columns.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('linked_items',
    sa.Column('integration_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('kanban_card_id', sa.Integer(), nullable=True),
    sa.Column('table_row_id', sa.Integer(), nullable=True),
    sa.Column('list_item_id', sa.Integer(), nullable=True),
    sa.Column('link_metadata', sa.JSON(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['module_integrations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['kanban_card_id'], ['kanban_cards.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['list_item_id'], ['list_items.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['table_row_id'], ['table_rows.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('list_definitions', sa.Column('template_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'list_definitions', 'module_templates', ['template_id'], ['id'], ondelete='SET NULL')
    op.add_column('module_templates', sa.Column('template_data', sa.JSON(), nullable=False))

    # Используем прямой SQL для изменения типа колонки с USING-выражением
    op.execute("ALTER TABLE module_templates ALTER COLUMN module_type TYPE moduletype USING module_type::moduletype")

    op.drop_column('module_templates', 'schema')
    op.add_column('table_definitions', sa.Column('template_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'table_definitions', 'module_templates', ['template_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'table_definitions', type_='foreignkey')
    op.drop_column('table_definitions', 'template_id')
    op.add_column('module_templates', sa.Column('schema', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))

    # Используем прямой SQL для изменения типа колонки обратно на VARCHAR
    op.execute("ALTER TABLE module_templates ALTER COLUMN module_type TYPE VARCHAR(50) USING module_type::text")

    op.drop_column('module_templates', 'template_data')
    op.drop_constraint(None, 'list_definitions', type_='foreignkey')
    op.drop_column('list_definitions', 'template_id')
    op.drop_table('linked_items')
    op.drop_table('kanban_cards')
    op.drop_table('post_tags')
    op.drop_table('post_content_blocks')
    op.drop_table('kanban_columns')
    op.drop_table('posts')
    op.drop_table('module_integrations')
    op.drop_table('kanban_boards')
    op.drop_table('tags')
    # Создаем тип enum перед его использованием с правильными значениями в нижнем регистре
    op.execute("CREATE TYPE moduletype AS ENUM ('table', 'list', 'kanban', 'blog')")
    # ### end Alembic commands ###
