"""add_ai_message_model

Revision ID: cf909f06a120
Revises: 939ff8aa993f
Create Date: 2025-05-05 18:16:33.239567

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cf909f06a120'
down_revision: Union[str, None] = '939ff8aa993f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Проверяем существование типа modeltype
    conn = op.get_bind()
    result = conn.execute(sa.text(
        "SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'modeltype')"
    ))
    type_exists = result.scalar()

    # Создаем тип только если он не существует
    if not type_exists:
        op.execute(sa.text(
            "CREATE TYPE modeltype AS ENUM ('YANDEX_GPT_LITE', 'YANDEX_GPT_PRO', 'YANDEX_GPT_PRO_32K', 'LLAMA_8B', 'LLAMA_70B', 'CUSTOM')"
        ))

    op.create_table('ai_messages',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('chat_id', sa.String(), nullable=False),
        sa.Column('role', sa.String(), nullable=False),
        sa.Column('text', sa.String(), nullable=False),
        sa.Column('model_type', postgresql.ENUM('YANDEX_GPT_LITE', 'YANDEX_GPT_PRO', 'YANDEX_GPT_PRO_32K', 'LLAMA_8B', 'LLAMA_70B', 'CUSTOM', name='modeltype', create_type=False), nullable=True),
        sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['chat_id'], ['ai_chats.chat_id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_messages_chat_id'), 'ai_messages', ['chat_id'], unique=False)
    op.create_index(op.f('ix_ai_messages_user_id'), 'ai_messages', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ai_messages_user_id'), table_name='ai_messages')
    op.drop_index(op.f('ix_ai_messages_chat_id'), table_name='ai_messages')
    op.drop_table('ai_messages')
    # ### end Alembic commands ###
